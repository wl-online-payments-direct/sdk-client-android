plugins {
    id 'com.android.library'
    id 'signing'
    id 'maven-publish'
    id 'org.sonarqube'
    id 'org.jetbrains.kotlin.android'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

android {
    namespace 'com.onlinepayments.sdk.client.android'

    compileSdk 34

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 34
        versionCode 1
        versionName "3.1.0"
        consumerProguardFiles 'consumer-rules.pro'
    }

    lint {
        abortOnError false
        lintConfig file('lint.xml')
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'androidx.annotation:annotation:1.8.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1'

    // Google pay
    implementation 'com.google.android.gms:play-services-wallet:19.3.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.mockito:mockito-core:5.11.0'
}

afterEvaluate {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.release

                groupId = POM_GROUP_ID
                artifactId = POM_ARTIFACT_ID
                version = POM_VERSION
                pom {
                    name = POM_NAME
                    description = POM_DESCRIPTION
                    url = POM_URL

                    organization {
                        name = POM_ORGANIZATION_NAME
                        url = POM_ORGANIZATION_URL
                    }

                    licenses {
                        license {
                            name = POM_LICENSE_NAME
                            url = POM_LICENSE_URL
                        }
                    }

                    developers {
                        developer {
                            name = POM_DEVELOPER_NAME
                            email = POM_DEVELOPER_EMAIL
                            organization = POM_DEVELOPER_ORGANIZATION
                            organizationUrl = POM_DEVELOPER_ORGANIZATIONURL
                        }
                    }

                    issueManagement {
                        system = POM_ISSUEMANAGEMENT_SYSTEM
                        url = POM_ISSUEMANAGEMENT_URL
                    }

                    scm {
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEVELOPERCONNECTION
                        url = POM_SCM_URL
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}